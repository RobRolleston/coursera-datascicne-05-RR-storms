stormData <- read.csv("stormdata.csv.bz2")
stormData <- read.csv("repdata_data_StormData.csv.bz2")
save(stormData, file="stormData.RData")
if (!exists(stormData)) {
}
get0(stormData)
exists("stormData")
if (!exists("stormData")) {
}
!exists(stormData)
!exists("stormData")
!exists("stormData") {}
print "foo"
cat foo
cat "foo"
print foo
print(foo)
print("foo")
if (!exists("stormData")) {
print{"stormdata object not found"}
}
if (!exists("stormData")) {
print{"stormdata object not found"}
}
if (!exists("stormData")) {
print("stormdata object not found")
}
if (exists("stormData")) {
print("stormdata object not found")
}
if (!exists("stormData")) {
print("stormdata object not found")
if (file.exists("stormData.RData")) {
print("file exists")
} else {
prnt ("reading file")
}
}
if (!exists("stormData")) {
print("stormdata object not found")
if (file.exists("stormData.RData")) {
print("file exists")
} else {
print ("reading file")
}
} else {
print("object exists")
}
if (!exists("stormData")) {
print("stormdata object not found")
if (file.exists("stormData.RData")) {
print("stormData.RData file exists")
load("stormData.RData")
} else {
print ("reading file")
}
} else {
print("object exists")
}
install.packages("data.table")
bar <- read.table(bzfile(repdata_data_StormData.csv.bz2))
bar <- read.table(bzfile("repdata_data_StormData.csv.bz2"))
if (!exists("stormData")) {
print("stormdata object not found")
if (file.exists("stormData.RData")) {
print("stormData.RData file exists")
load("stormData.RData")
} else {
print ("reading file")
stormData <- read.csv("repdata_data_StormData.csv.bz2")
save(stormData, file="stormData.RData")
}
} else {
print("stormdata object exists")
}
!exists("stormData")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(stormData)
nrow(stormData)
stormData_df <- tbl_df(stormData) %>%
one_of(c("EVTYPE",
"FATALITIES", "INJURIES",
"PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP"))
stormData_df <- tbl_df(stormData) %>%
select(one_of(c("EVTYPE",
"FATALITIES", "INJURIES",
"PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")))
View(stormData_df)
View(stormData_df)
levels(stormData_df$PROPDMGEXP)
library("dplyr", lib.loc="C:/Program Files/R/R-3.2.1/library")
foo <- select(stormData_df, one_of(c("","-","?","+")))
foo <- select(stormData_df, stormData_df$PROPDMGEXP %in% c("","-","?","+"))
foo <- Filter(stormData_df, stormData_df$PROPDMGEXP %in% c("","-","?","+"))
foo <- filter(stormData_df, stormData_df$PROPDMGEXP %in% c("","-","?","+"))
View(foo)
foo <- stormData_df %>%
filter(FATALITIES >0 ||
INJURIES >0 ||
PROPDMG  >0 ||
CROPDMG  >0 )
foo <- stormData_df %>%
filter(FATALITIES >0 |
INJURIES >0 |
PROPDMG  >0 |
CROPDMG  >0 )
View(foo)
stormData_df <- stormData_df %>%
filter(FATALITIES >0 |
INJURIES >0 |
PROPDMG  >0 |
CROPDMG  >0 )
foo <- filter(stormData_df, stormData_df$PROPDMGEXP %in% c("","-","?","+"))
View(foo)
foo <- filter(stormData_df, stormData_df$PROPDMGEXP %in% c("-","?","+"))
View(foo)
foo <- filter(stormData_df, stormData_df$CROPDMGEXP %in% c("-","?","+"))
View(foo)
levels(stormData_df$PROPDMGEXP)
levels(stormData_df$CROPDMGEXP)
remvoe(foo)
remove(foo)
nrows(stormData_df)
nrow(stormData_df)
foo <- stormData_df
foo$PROPDMGEXP <- factor(foo$PROPDMGEXP)
foo$CROPDMGEXP <- factor(foo$CROPDMGEXP)
levels(foo$PROPDMGEXP)
levels(foo$CROPDMGEXP)
remove(foo)
stormData_df$PROPDMGEXP <- factor(stormData_df$PROPDMGEXP)
stormData_df$CROPDMGEXP <- factor(stormData_df$CROPDMGEXP)
remove(stormData_df)
library("dplyr", lib.loc="C:/Program Files/R/R-3.2.1/library")
source('~/.active-rstudio-document', echo=TRUE)
View(stormDataH)
View(stormDataE)
nrow(select(stormDataE, one_of(c('-','+','?')))
)
nrow(filter(stormDataE, PROPDMGEXP %in% (c('-','+','?'))))
nrow(filter(stormDataE, CROPDMGEXP %in% (c('-','+','?'))))
foo <- filter(stormDataE, PROPDMGEXP %in% (c('-','+','?')))
bar <- filter(stormDataE, CROPDMGEXP %in% (c('-','+','?')))
View(bar)
View(foo)
stormDataE <- filter(stormDataE, !(PROPDMGEXP %in% (c('-','+','?'))))
stormDataE <- filter(stormDataE, !(CROPDMGEXP %in% (c('-','+','?'))))
my_k <- "k"
my_K <- "K"
my_k == "k"
my_k == "K"
remove(my_k)
remove(my_K)
remove(foo, bar)
library("dplyr", lib.loc="C:/Program Files/R/R-3.2.1/library")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("data.table")
source('~/.active-rstudio-document', echo=TRUE)
View(stormDataE)
View(stormDataE)
source('~/.active-rstudio-document', echo=TRUE)
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES))
View(stormDataHumanByType)
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES)) %>%
mutate(totalHuman = totalFatalities + totalInjuries) %>%
arrange(totalHuman)
View(stormDataHumanByType)
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES)) %>%
mutate(totalHuman = totalFatalities + totalInjuries) %>%
arrange(desc(totalHuman))
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES)) %>%
mutate(totalHuman = totalFatalities + totalInjuries) %>%
arrange(desc(totalHuman)) %>%
top_n(10)
stormDataEconomicByType <- stormDataE %>% group_by(EVTYPE) %>%
summarise(totalCrop=sum(CROPDMGVAL), totalProp=sum(CROPDMGVAL)) %>%
mutate(totalEconomic = totalCrop + totalProp) %>%
arrange(desc(totalEconomic)) %>%
top_n(10)
View(stormDataEconomicByType)
stormDataEconomicByType <- stormDataE %>% group_by(EVTYPE) %>%
summarise(totalCrop=sum(CROPDMGVAL), totalProp=sum(PROPDMGVAL)) %>%
mutate(totalEconomic = totalCrop + totalProp) %>%
arrange(desc(totalEconomic)) %>%
top_n(10)
ggplot(data=stormDataHumanByType, aes(x=EVTPE, y=totalHumna)) + geom_bar(stat="identity")
ggplot(data=stormDataHumanByType, aes(x=EVTYPE, y=totalHumna)) + geom_bar(stat="identity")
ggplot(data=stormDataHumanByType, aes(x=EVTYPE, y=totalHuman)) + geom_bar(stat="identity")
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES)) %>%
mutate(totalHuman = totalFatalities + totalInjuries) %>%
top_n(10, totalHuman) %>%
arrange(desc(totalHuman))
stormDataEconomicByType <- stormDataE %>% group_by(EVTYPE) %>%
summarise(totalCrop=sum(CROPDMGVAL), totalProp=sum(PROPDMGVAL)) %>%
mutate(totalEconomic = totalCrop + totalProp) %>%
top_n(10, totalEconomic) %>%
arrange(desc(totalEconomic))
plotHuman <- ggplot(stormDataHumanByType, aes(x = EVTYPE, y=totalHuman)) +
geom_bar(aes(x=ord),stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
plotHuman <- ggplot(stormDataHumanByType, aes(x = EVTYPE, y=totalHuman)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
levels(stormDataHumanByType$EVTYPE)
stormDataHumanByType$EVTYPE <- factor(stormDataHumanByType$EVTYPE)
stormDataEconomicByType$EVTYPE <- factor(stormDataEconomicByType$EVTYPE)
plotHuman <- ggplot(stormDataHumanByType, aes(x = EVTYPE, y=totalHuman)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
levels(stormDataHumanByType$EVTYPE)
stormDataHumanByType$EVTYPE <- factor(stormDataHumanByType$EVTYPE,
levels=names(sort(stormDataHumanByType$EVTYPE, decreasing=TRUE)))
stormDataHumanByType$EVTYPE <- factor(stormDataHumanByType$EVTYPE,
levels=names(sort(stormDataHumanByType$EVTYPE, decreasing=TRUE)))
levels(stormDataHumanByType$EVTYPE)
plotHuman <- ggplot(stormDataHumanByType, aes(x = reorder(EVTYPE, -totalHuman), y=totalHuman)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
stormDataHumanByType <- stormDataH %>% group_by(EVTYPE) %>%
summarise(totalFatalities=sum(FATALITIES), totalInjuries=sum(INJURIES)) %>%
mutate(totalHuman = totalFatalities + totalInjuries) %>%
top_n(10, totalHuman) %>%
arrange(desc(totalHuman))
stormDataHumanByType$EVTYPE <- factor(stormDataHumanByType$EVTYPE)
#evtypeNames <- levels(stormDataHumanByType$EVTYPE)
#stormDataHumanByType$EVTYPE <- factor(stormDataHumanByType$EVTYPE,
#                                      levels=names(sort(stormDataHumanByType$EVTYPE, decreasing=TRUE)))
stormDataEconomicByType <- stormDataE %>% group_by(EVTYPE) %>%
summarise(totalCrop=sum(CROPDMGVAL), totalProp=sum(PROPDMGVAL)) %>%
mutate(totalEconomic = totalCrop + totalProp) %>%
top_n(10, totalEconomic) %>%
arrange(desc(totalEconomic))
stormDataEconomicByType$EVTYPE <- factor(stormDataEconomicByType$EVTYPE)
plotHuman <- ggplot(stormDataHumanByType, aes(x = reorder(EVTYPE, -totalHuman), y=totalHuman)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
plotHuman <- ggplot(stormDataHumanByType, aes(x = reorder(EVTYPE, totalHuman), y=totalHuman)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Human Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Injuries & Fatalities")+coord_flip()
print(plotHuman)
plotEcon <- ggplot(stormDataEconomicByType, aes(x = reorder(EVTYPE, totalEconomic), y=totalEconomic)) +
geom_bar(stat = "identity") +
ggtitle("Sum of Economic Impact due to top 10 destructive event types") +
xlab("Event Types") + ylab("Sum of Crop & Property Damage")+coord_flip()
print(plotEcon)
